{"version":3,"sources":["index.js","pathService.js","HomeController.js","MainController.js","PathDetailsController.js","PathListController.js","js/controllers.js","js/filters.js","js/services.js"],"names":["angular","module","config","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","PathService","$http","$q","_classCallCheck","this","pathListResponse","url","method","_this","resolve","reject","getPathFromWeb","then","response","processData","data","error","pathId","_this2","findByKey","paths","getPaths","arr","key","value","i","len","length","_this3","map","u","id","parseInt","learner","replace","hours","tagsArr","tags","split","trim","filter","undefined","likeCount","getLocalStoredLikeCount","reduce","allTags","unitPath","forEach","unitTag","indexOf","push","localStorage","getItem","Error","setItem","console","$inject","HomeController","$location","path","MainController","$scope","appTitle","log","PathDetailsController","$routeParams","$timeout","details","availablePaths","getPath","currentSlideIndex","carousel","PathListController","quoteAvailable","quoteMax","query","tagQuery","filterTags","orderByKey","orderByAsc","isSideBarActive","quote_available","quote_max","pathObj","isLike","arguments","updateLike","tag","tagIndex","splice","inputPaths","inputTags","toLowerCase","unit","name","description","orderKey","isAsc","isNumber","numberKeys","sort","a","b","localeCompare","service"],"mappings":"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","file":"app.js","sourcesContent":["angular.module(\"springboardApp\",[\"ngRoute\"])\r\n.config([\"$routeProvider\",function($routeProvider){\r\n\t$routeProvider\r\n\t\t.when(\"/\",{\r\n\t\t\ttemplateUrl:\"./views/home.html\",\r\n\t\t\tcontroller:\"homeController\",\r\n\t\t\tcontrollerAs:\"home\"\r\n\t\t})\r\n\t\t.when(\"/paths\",{\r\n\t\t\ttemplateUrl:\"./views/paths.html\",\r\n\t\t\tcontroller:\"pathListController\",\r\n\t\t\tcontrollerAs:\"pathList\"\r\n\t\t})\r\n\t\t.when(\"/path/:pathId\",{\r\n\t\t\ttemplateUrl:\"./views/pathView.html\",\r\n\t\t\tcontroller:\"pathDetailsController\",\r\n\t\t\tcontrollerAs:\"path\"\r\n\t\t})\r\n\t\t.when(\"/error\",{\r\n\t\t\ttemplateUrl:\"./views/error.html\",\r\n\t\t})\r\n\t\t.otherwise({\r\n\t\t\tredirectTo:\"/error\"\r\n\t\t})\r\n}])","class PathService{\r\n\tconstructor($http,$q){\r\n\t\tthis.$http = $http;\r\n\t\tthis.$q = $q;\r\n\t\tthis.pathListResponse = null;\r\n\t}\r\n\r\n\tgetPathFromWeb(){\r\n\t\treturn this.$http({\r\n\t\t\turl:\"https://hackerearth.0x10.info/api/learning-paths?type=json&query=list_paths\",\r\n\t\t\t//url:\"data.json\",\r\n\t\t\tmethod:\"GET\"\r\n\t\t})\r\n\t}\r\n\tgetPaths(){\r\n\t\treturn this.$q((resolve,reject)=>{\r\n\t\t\tif(this.pathListResponse){\r\n\t\t\t\tresolve(this.pathListResponse);\r\n\t\t\t}else{\r\n\t\t\t\tthis.getPathFromWeb()\r\n\t\t\t\t\t.then((response)=>{\r\n\t\t\t\t\t\tthis.pathListResponse = this.processData(response.data);\r\n\t\t\t\t\t\tresolve(this.pathListResponse);\r\n\t\t\t\t\t},(error)=>{\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tgetPath(pathId){\r\n\t\treturn this.$q((resolve,reject)=>{\r\n\t\t\tif(this.pathListResponse){\r\n\t\t\t\tresolve(this.findByKey(this.pathListResponse.paths,\"id\",pathId));\r\n\t\t\t}else{\r\n\t\t\t\tthis.getPaths()\r\n\t\t\t\t\t.then((data)=>{\r\n\t\t\t\t\t\tresolve(this.findByKey(data.paths,\"id\",pathId));\r\n\t\t\t\t\t},(error)=>{\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tfindByKey(arr,key,value){\r\n\t\tfor(let i=0,len=arr.length;i<len;i++){\r\n\t\t\tif(arr[i][key] == value){\r\n\t\t\t\treturn arr[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tprocessData(data){\r\n\t\tdata.paths = data.paths.map((u,i,arr)=>{\r\n\t\t\tu.id = parseInt(u.id);\r\n\t\t\tu.learner = parseInt(u.learner.replace(/,/g,\"\"));\r\n\t\t\tu.hours = parseInt(u.hours);\r\n\t\t\tu.tagsArr = u.tags.split(\",\")\r\n\t\t\t\t\t\t.map((u)=>{\r\n\t\t\t\t\t\t\treturn u.trim();\r\n\t\t\t\t\t\t}).filter((u)=>{\r\n\t\t\t\t\t\t\treturn u != \"\" && u != undefined;\r\n\t\t\t\t\t\t});\r\n\t\t\tu.likeCount = this.getLocalStoredLikeCount(u.id)\r\n\t\t\treturn u;\r\n\t\t});\r\n\t\tdata.tags = data.paths.reduce((allTags,unitPath)=>{\r\n\t\t\tunitPath.tagsArr.forEach((unitTag)=>{\r\n\t\t\t\tif(allTags.indexOf(unitTag) == -1){\r\n\t\t\t\t\tallTags.push(unitTag);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn allTags;\r\n\t\t},[])\r\n\t\treturn data;\r\n\t}\r\n\tgetLocalStoredLikeCount(id){\r\n\t\ttry{\r\n\t\t\tlet likeCount = localStorage.getItem(id);\r\n\t\t\treturn likeCount ? parseInt(likeCount) : 0;\r\n\t\t}catch(Error){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tupdateLike(id,likeCount){\r\n\t\ttry{\r\n\t\t\tlocalStorage.setItem(\"\" + id , \"\"+likeCount)\r\n\t\t}catch(error){\r\n\t\t\tconsole.error(\"localStorage not supported\");\r\n\t\t}\r\n\t}\r\n}\r\nPathService.$inject = [\"$http\",\"$q\"];","class HomeController{\r\n\tconstructor($location){\r\n\t\tthis.$location = $location;\r\n\t}\r\n\texplore(){\r\n\t\tthis.$location.path(\"/paths\");\r\n\t}\r\n}\r\nHomeController.$inject = [\"$location\"];","class MainController{\r\n\tconstructor($scope){\r\n\t\tthis.appTitle = \"SpringBoard\";\r\n\t\tconsole.log(\"inside main controller\");\r\n\t}\r\n}\r\nMainController.$inject = ['$scope'];","class PathDetailsController{\r\n\tconstructor(PathService,$routeParams,$location,$timeout){\r\n\t\tthis.PathService = PathService;\r\n\t\tthis.$location = $location;\r\n\t\tthis.$timeout = $timeout;\r\n\t\tthis.pathId = $routeParams.pathId;\r\n\t\tthis.details = {};\r\n\t\tthis.availablePaths = [];\r\n\t\t\r\n\t\tthis.getPath(this.pathId);\r\n\r\n\t\tthis.currentSlideIndex= 0;\r\n\t}\r\n\tgetPath(pathId){\r\n\t\tthis.PathService.getPath(pathId)\r\n\t\t\t.then((data)=>{\r\n\t\t\t\tthis.details = data;\r\n\t\t\t\tif(data == null){\r\n\t\t\t\t\tthis.$location.path(\"/error\")\r\n\t\t\t\t}\r\n\t\t\t\tthis.getPaths();\r\n\t\t\t\tconsole.log(\"getting path\",data);\r\n\t\t\t},(error)=>{\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\tgetPaths(){\r\n\t\tthis.PathService.getPaths()\r\n\t\t\t.then((data)=>{\r\n\t\t\t\tthis.availablePaths = data.paths;\r\n\t\t\t\tthis.carousel();\r\n\t\t\t\tconsole.log(\"get path in detail view\",this.availablePaths);\r\n\t\t\t},(error)=>{\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\tcarousel(){\r\n\t\tthis.currentSlideIndex++;\r\n\t\tif(this.currentSlideIndex >= this.availablePaths.length){\r\n\t\t\tthis.currentSlideIndex = 0;\r\n\t\t}\r\n\t\tthis.$timeout(()=>{\r\n\t\t\tthis.carousel();\r\n\t\t}, 3000);\r\n\t}\r\n}\r\nPathDetailsController.$inject = [\"PathService\",\"$routeParams\",\"$location\",\"$timeout\"];","class PathListController{\r\n\tconstructor(PathService,$location){\r\n\t\tthis.PathService = PathService;\r\n\t\tthis.$location = $location;\r\n\t\t\r\n\t\tthis.availablePaths = [];\r\n\t\tthis.tags = [];\r\n\t\tthis.quoteAvailable = 0;\r\n\t\tthis.quoteMax = 0;\r\n\r\n\t\tthis.query = \"\";\r\n\t\tthis.tagQuery = \"\";\r\n\t\tthis.filterTags = [];\r\n\t\tthis.orderByKey = \"id\";\r\n\t\tthis.orderByAsc = true;\r\n\t\t\r\n\t\tthis.isSideBarActive = true;\r\n\t\tthis.getPaths();\r\n\t}\r\n\tgetPaths(){\r\n\t\tthis.PathService.getPaths()\r\n\t\t\t.then((data)=>{\r\n\t\t\t\tthis.availablePaths = data.paths;\r\n\t\t\t\tthis.tags = data.tags;\r\n\t\t\t\tthis.quoteAvailable = data.quote_available;\r\n\t\t\t\tthis.quoteMax = data.quote_max;\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t},(error)=>{\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\tshowDetails(pathId){\r\n\t\tthis.$location.path(\"/path/\" + pathId);\r\n\t}\r\n\tlikeDislike(pathObj,isLike=true){\r\n\t\tif(isLike){\r\n\t\t\tpathObj.likeCount = pathObj.likeCount + 1;\r\n\t\t}else{\r\n\t\t\tpathObj.likeCount = pathObj.likeCount - 1;\r\n\t\t}\r\n\t\tthis.PathService.updateLike(pathObj.id,pathObj.likeCount)\r\n\t}\r\n\tclearTags(){\r\n\t\tthis.filterTags = [];\r\n\t}\r\n\taddFilterTags(tag){\r\n\t\tlet tagIndex = this.filterTags.indexOf(tag);\r\n\t\tif(tagIndex == -1){\r\n\t\t\tthis.filterTags.push(tag);\t\r\n\t\t}else{\r\n\t\t\tthis.filterTags.splice(tagIndex,1);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tsetOrder(key){\r\n\t\tif(this.orderByKey == key){\r\n\t\t\tthis.orderByAsc = !this.orderByAsc;\r\n\t\t}else{\r\n\t\t\tthis.orderByKey = key;\r\n\t\t\tthis.orderByAsc = true;\r\n\t\t}\r\n\t}\r\n}\r\nPathListController.$inject = [\"PathService\",\"$location\"];","angular.module(\"springboardApp\")\r\n.controller(\"mainController\",MainController)\r\n.controller(\"homeController\",HomeController)\r\n.controller(\"pathListController\",PathListController)\r\n.controller(\"pathDetailsController\",PathDetailsController)","angular.module(\"springboardApp\")\r\n.filter(\"tagFilter\",()=>{\r\n\treturn (inputPaths,filterTags)=>{\r\n\t\tif(filterTags == undefined || filterTags.length == 0){return inputPaths;}\r\n\t\treturn inputPaths.filter((unitPath)=>{\r\n\t\t\tlet tags = unitPath.tagsArr;\r\n\t\t\tfor(let i=0,len=tags.length;i<len;i++){\r\n\t\t\t\tif(~filterTags.indexOf(tags[i])){return true;}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t})\r\n\t}\r\n})\r\n.filter(\"tagSearch\",()=>{\r\n\treturn (inputTags,query)=>{\r\n\t\tquery = query.toLowerCase();\r\n\t\treturn inputTags.filter((unit)=>{\r\n\t\t\treturn ~unit.toLowerCase().indexOf(query);\r\n\t\t})\r\n\t}\r\n})\r\n.filter(\"searchFilter\",()=>{\r\n\treturn (inputPaths,query)=>{\r\n\t\tif(!query){\treturn inputPaths;}\r\n\t\tquery = query.trim().toLowerCase();\r\n\t\treturn inputPaths.filter((unit)=>{\r\n\t\t\treturn (\r\n\t\t\t\t\t~unit.name.toLowerCase().indexOf(query) ||\r\n\t\t\t\t\t~unit.description.toLowerCase().indexOf(query) ||\r\n\t\t\t\t\t~unit.tags.toLowerCase().indexOf(query)\r\n\t\t\t\t)\r\n\t\t})\r\n\t}\r\n})\r\n.filter(\"orderFilter\",()=>{\r\n\treturn (inputPaths,orderKey,isAsc)=>{\r\n\t\tlet isNumber = false;\r\n\t\tlet numberKeys = [\"id\",\"learner\",'hours'];\r\n\t\tif(~numberKeys.indexOf(orderKey)){\r\n\t\t\tisNumber = true;\r\n\t\t}\r\n\t\tlet sortedPath  = [];\r\n\t\t\r\n\t\tinputPaths.sort((a,b)=>{\r\n\t\t\ta = a[orderKey];\r\n\t\t\tb = b[orderKey];\r\n\t\t\tif(isNumber){\r\n\t\t\t\tif(isAsc){\r\n\t\t\t\t\treturn a-b;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn b-a;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(isAsc){\r\n\t\t\t\t\treturn a.localeCompare(b);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn b.localeCompare(a);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn inputPaths;\r\n\t}\r\n})","angular.module(\"springboardApp\")\r\n.service(\"PathService\",PathService)"],"sourceRoot":"/source/"}